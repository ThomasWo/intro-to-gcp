steps:
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=app/secret/service_user.json.enc
  - --plaintext-file=app/secret/service_user.json
  - --location=global
  - --keyring=testtube
  - --key=testtube
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=helm/app/values.yaml.enc
  - --plaintext-file=helm/app/values.yaml
  - --location=global
  - --keyring=testtube
  - --key=testtube
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/$PROJECT_ID/app']
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/$PROJECT_ID/nginx']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/app:latest', '-t', 'gcr.io/$PROJECT_ID/app:$COMMIT_SHA', '--cache-from', 'gcr.io/$PROJECT_ID/app:latest', '.']
  dir: 'app'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/nginx:latest', '-t', 'gcr.io/$PROJECT_ID/nginx:$COMMIT_SHA', '--cache-from', 'gcr.io/$PROJECT_ID/nginx:latest', '.']
  dir: 'nginx'
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/app']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/nginx']
- name: 'gcr.io/twodarek-talks/helm'
  args: ['upgrade', '--install', 'app', '.', '--values', 'values.yaml', '--namespace', 'app', '--set', 'image.tag=$COMMIT_SHA']
  dir: 'helm/app'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=standard-cluster-1'
  - 'TILLER_NAMESPACE=helm'
- name: 'gcr.io/$PROJECT_ID/helm'
  args: ['upgrade', '--install', 'nginx', '.', '--values', 'values.yaml', '--namespace', 'app', '--set', 'image.tag=$COMMIT_SHA']
  dir: 'helm/nginx'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=standard-cluster-1'
  - 'TILLER_NAMESPACE=helm'
tags: ['cloud-builders-community']

timeout: 600s
